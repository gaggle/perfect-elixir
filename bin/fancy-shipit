#!/usr/bin/env -S pkgx scriptisto

# scriptisto-begin
# script_src: lib/script.ex
# build_cmd: mix deps.get; MIX_ENV=prod mix escript.build
# files:
#  - path: mix.exs
#    content: |
#     defmodule Script.MixProject do
#     use Mix.Project
#     def project do
#      [
#        app: :script,
#        version: "0.1.0",
#        elixir: "~> 1.16",
#        escript: [main_module: Script.CLI],
#        deps: [{:owl, "~> 0.9"}]
#      ]
#      end
#     end
# scriptisto-end

defmodule Script.CLI do
  def main(_) do
    1..10
    |> Enum.map(fn index ->
      Task.async(fn ->
        range = 1..Enum.random(100..300)

        label = ["Demo Progress ", Owl.Data.tag("##{index}", :cyan)]

        Owl.ProgressBar.start(
          id: {:demo, index},
          label: label,
          total: range.last,
          timer: true,
          bar_width_ratio: 0.3,
          filled_symbol: Owl.Data.tag("#", :red),
          empty_symbol: Owl.Data.tag("-", :light_black),
          partial_symbols: []
        )

        Enum.each(range, fn _ ->
          Process.sleep(Enum.random(10..50))
          Owl.ProgressBar.inc(id: {:demo, index})
        end)
      end)
    end)
    |> Task.await_many(:infinity)

    Owl.LiveScreen.await_render()
  end
end
