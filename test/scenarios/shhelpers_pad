#!/usr/bin/env -S pkgx +pip@24 python@3

import os
import subprocess
import sys

try:
    import pexpect
except ImportError:
    subprocess.check_call([sys.executable, "-m", "pip", "install", "pexpect"])
    import pexpect

BIN_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '../../bin'))
PROMPT = '$ '

child = pexpect.spawn("/bin/zsh -f", env={"PS1": PROMPT}, timeout=5)
child.logfile_read = sys.stdout.buffer
try:
    child.expect_exact(PROMPT)

    child.sendline(f"source {BIN_DIR}/.shhelpers")
    child.expect_exact(PROMPT)

    child.sendline('echo "<1234567890>"')
    child.expect_exact("<1234567890>")

    child.sendline('echo "<$(_pad "ham" 10)>"')
    child.expect_exact("<ham       >")
    child.sendline('echo "<$(_pad "bacon" 10)>"')
    child.expect_exact("<bacon     >")

    child.sendline('echo "<$(_leftpad "ham" 10)>"')
    child.expect_exact("<       ham>")
    child.sendline('echo "<$(_leftpad "bacon" 10)>"')
    child.expect_exact("<     bacon>")

    child.expect_exact(PROMPT)
    child.sendline("exit")
    child.expect(pexpect.EOF)
except (pexpect.exceptions.TIMEOUT, pexpect.exceptions.EOF) as e:
    print(str(e))
    child.close(force=True)
else:
    child.close()
sys.exit(child.exitstatus)
