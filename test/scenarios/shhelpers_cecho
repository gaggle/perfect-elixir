#!/usr/bin/env -S pkgx +pip@24 +zsh@5 +bash@5 python@3
import sys
import os

parent_dir = os.path.abspath(os.path.join(os.path.dirname(__file__), ".."))
if parent_dir not in sys.path:
    sys.path.append(parent_dir)

from test_runner import run_tests_against_shells


def test(child, P, BIN_DIR, PROMPT):
    child.sendline(f"source {BIN_DIR}/.shhelpers")
    child.expect_exact(PROMPT)

    # Test: Styles
    child.sendline('p; cecho "Test: " -b "bold " -f "faint " -i "italic " -u "underline"')
    child.expect(f'{P} Test:.*bold.*faint.*italic.*underline')
    child.expect_exact(PROMPT)

    # Test: Colors
    child.sendline('p; cecho "Test: " --black "black " --red "red " --green "green " --yellow "yellow " --blue "blue " --magenta "magenta " --cyan "cyan " --white "white"')
    child.expect(f'{P}.*Test:.*black.*red.*green.*yellow.*blue.*magenta.*cyan.*white')
    child.expect_exact(PROMPT)

    # Test: Bright Colors
    child.sendline('p; cecho "Test: " -B --black "black " -B --red "red " -B --green "green " -B --yellow "yellow " -B --blue "blue " -B --magenta "magenta " -B --cyan "cyan " -B --white "white"')
    child.expect(f'{P}.*Test:.*black.*red.*green.*yellow.*blue.*magenta.*cyan.*white')
    child.expect_exact(PROMPT)

    # Test: Bundled args
    child.sendline('p; cecho -bi "Test: Bundled " -Bu "args"')
    child.expect(f'{P}.*Test: Bundled.*args')
    child.expect_exact(PROMPT)

    # Test: Multiple styles & colors & reset
    child.sendline('p; cecho "Test: " --green "Green " -u "Underlined" " and " -b "Bold"')
    child.expect(f'{P}.*Test:.*Green.*Underlined.*and.*Bold')
    child.expect_exact(PROMPT)

    # Test: Combining multiple styles and colors without explicit segment separators
    child.sendline('p; cecho --blue "Test: Blue, " --yellow "Yellow, " "and " --green "Green Text"')
    child.expect(f'{P}.*Test: Blue,.*Yellow,.*and.*Green Text')
    child.expect_exact(PROMPT)

    # Test: No newline at the end
    child.sendline('p; cecho -n --cyan "Test: Cyan No New"; echo "line"')
    child.expect(f'{P}.*Test: Cyan No New.*line')
    child.expect_exact(PROMPT)

    # Test: Empty string
    child.sendline('p; cecho ""')
    child.expect_exact(f'{P} ')
    child.expect_exact(PROMPT)
    child.sendline('p; cecho --white ""')
    child.expect_exact(f'{P} ')
    child.expect_exact(PROMPT)
    child.sendline('p; cecho -b "#" "" -b "#"')
    child.expect(f'{P}.*#.*#')
    child.expect_exact(PROMPT)
    child.sendline('p; cecho -b "#" --white "" -b "#"')
    child.expect(f'{P}.*#.*#')
    child.expect_exact(PROMPT)

    # Test: Help message
    child.sendline('p; cecho --help')
    child.expect(f'{P} cecho: echo text with.*color.*and.*style')
    child.expect_exact(PROMPT)


if __name__ == "__main__":
    run_tests_against_shells(test)
